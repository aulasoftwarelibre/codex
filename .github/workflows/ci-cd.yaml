name: CI-CD

on:
  push:
    branches:
      - "main"
      - "releases/**"
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request: ~

env:
  DOCKER_BUILDKIT: 1

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 18 ]
    name: Run tests on Node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn test:ci

  images:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'aulasoftwarelibre/codex' && (startsWith(github.ref, 'refs/heads/releases/') || startsWith(github.ref, 'refs/tags/v') )
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract tag name
        id: extract_tag
        run: echo "TAG=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/aulasoftwarelibre/codex:latest
            ghcr.io/aulasoftwarelibre/codex:${{ steps.extract_tag.outputs.TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
